//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.2
//     from Assets/_Project/Game/Gameplay/Scripts/Player/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""PiecesActions"",
            ""id"": ""5c01e73e-ac67-4a37-82f4-38fbe856c152"",
            ""actions"": [
                {
                    ""name"": ""Rotate"",
                    ""type"": ""Button"",
                    ""id"": ""822291b8-e163-488d-8e73-ff77fe3d7adf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TouchDown"",
                    ""type"": ""Button"",
                    ""id"": ""35a97131-7cca-4806-9862-51f2ae62d42b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TouchUp"",
                    ""type"": ""Button"",
                    ""id"": ""b8a39038-bd8f-4fbb-bb98-e9785496a4f5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HorizontalMove"",
                    ""type"": ""PassThrough"",
                    ""id"": ""00703d40-f51b-4714-a630-fa9e398cea07"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""VerticalMove"",
                    ""type"": ""PassThrough"",
                    ""id"": ""f7795d31-f25e-431c-818f-2582f2e33cfb"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""f55392c1-b1ec-43ac-af9c-08298f740cd3"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6bb33fd9-8dc6-4035-88fb-e4f26c74c2b0"",
                    ""path"": ""<Touchscreen>/touch0/tap"",
                    ""interactions"": ""Press(pressPoint=0.1)"",
                    ""processors"": """",
                    ""groups"": ""Touch"",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7277eeb0-1a27-41c8-a6e5-19d6894b402d"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": ""Press(pressPoint=0.1)"",
                    ""processors"": """",
                    ""groups"": ""Touch"",
                    ""action"": ""TouchDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""89c80ba3-6a7d-4e86-a023-a0ee95ec7c99"",
                    ""path"": ""<Touchscreen>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Touch"",
                    ""action"": ""HorizontalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""3b40ed49-894c-4b65-9297-7cb7df232133"",
                    ""path"": ""2DVector"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""5c8fc23e-af19-4771-8c4e-1028cf18b934"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""HorizontalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""67e85399-bf0f-468b-a362-9fc9cefaaf96"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""HorizontalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""bc0797df-0fa9-43f7-8f78-f89500fff937"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""HorizontalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""6bbf225a-4645-442b-9293-0a8df4fa643a"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""HorizontalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""40bbecf2-4654-4357-af84-976d10fc87d2"",
                    ""path"": ""<Touchscreen>/primaryTouch/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Touch"",
                    ""action"": ""VerticalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""a1c79177-a46d-4a37-88b6-9dcfa1ff96bb"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VerticalMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ffa4eb9c-b2d2-42a9-a3d7-cda7888e1b93"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""VerticalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""292b9165-2ee9-4939-b61c-800d0a3fc554"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""VerticalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a5c13131-0ca8-466c-a5d5-19adfe9a1e53"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""VerticalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""247efd58-00c2-4810-8517-80a33935b23c"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""VerticalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""fe963b1c-b417-461a-b8b8-7e1aa7c5b80f"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": ""Touch"",
                    ""action"": ""TouchUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": []
        },
        {
            ""name"": ""Touch"",
            ""bindingGroup"": ""Touch"",
            ""devices"": []
        }
    ]
}");
        // PiecesActions
        m_PiecesActions = asset.FindActionMap("PiecesActions", throwIfNotFound: true);
        m_PiecesActions_Rotate = m_PiecesActions.FindAction("Rotate", throwIfNotFound: true);
        m_PiecesActions_TouchDown = m_PiecesActions.FindAction("TouchDown", throwIfNotFound: true);
        m_PiecesActions_TouchUp = m_PiecesActions.FindAction("TouchUp", throwIfNotFound: true);
        m_PiecesActions_HorizontalMove = m_PiecesActions.FindAction("HorizontalMove", throwIfNotFound: true);
        m_PiecesActions_VerticalMove = m_PiecesActions.FindAction("VerticalMove", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PiecesActions
    private readonly InputActionMap m_PiecesActions;
    private IPiecesActionsActions m_PiecesActionsActionsCallbackInterface;
    private readonly InputAction m_PiecesActions_Rotate;
    private readonly InputAction m_PiecesActions_TouchDown;
    private readonly InputAction m_PiecesActions_TouchUp;
    private readonly InputAction m_PiecesActions_HorizontalMove;
    private readonly InputAction m_PiecesActions_VerticalMove;
    public struct PiecesActionsActions
    {
        private @PlayerInputActions m_Wrapper;
        public PiecesActionsActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Rotate => m_Wrapper.m_PiecesActions_Rotate;
        public InputAction @TouchDown => m_Wrapper.m_PiecesActions_TouchDown;
        public InputAction @TouchUp => m_Wrapper.m_PiecesActions_TouchUp;
        public InputAction @HorizontalMove => m_Wrapper.m_PiecesActions_HorizontalMove;
        public InputAction @VerticalMove => m_Wrapper.m_PiecesActions_VerticalMove;
        public InputActionMap Get() { return m_Wrapper.m_PiecesActions; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PiecesActionsActions set) { return set.Get(); }
        public void SetCallbacks(IPiecesActionsActions instance)
        {
            if (m_Wrapper.m_PiecesActionsActionsCallbackInterface != null)
            {
                @Rotate.started -= m_Wrapper.m_PiecesActionsActionsCallbackInterface.OnRotate;
                @Rotate.performed -= m_Wrapper.m_PiecesActionsActionsCallbackInterface.OnRotate;
                @Rotate.canceled -= m_Wrapper.m_PiecesActionsActionsCallbackInterface.OnRotate;
                @TouchDown.started -= m_Wrapper.m_PiecesActionsActionsCallbackInterface.OnTouchDown;
                @TouchDown.performed -= m_Wrapper.m_PiecesActionsActionsCallbackInterface.OnTouchDown;
                @TouchDown.canceled -= m_Wrapper.m_PiecesActionsActionsCallbackInterface.OnTouchDown;
                @TouchUp.started -= m_Wrapper.m_PiecesActionsActionsCallbackInterface.OnTouchUp;
                @TouchUp.performed -= m_Wrapper.m_PiecesActionsActionsCallbackInterface.OnTouchUp;
                @TouchUp.canceled -= m_Wrapper.m_PiecesActionsActionsCallbackInterface.OnTouchUp;
                @HorizontalMove.started -= m_Wrapper.m_PiecesActionsActionsCallbackInterface.OnHorizontalMove;
                @HorizontalMove.performed -= m_Wrapper.m_PiecesActionsActionsCallbackInterface.OnHorizontalMove;
                @HorizontalMove.canceled -= m_Wrapper.m_PiecesActionsActionsCallbackInterface.OnHorizontalMove;
                @VerticalMove.started -= m_Wrapper.m_PiecesActionsActionsCallbackInterface.OnVerticalMove;
                @VerticalMove.performed -= m_Wrapper.m_PiecesActionsActionsCallbackInterface.OnVerticalMove;
                @VerticalMove.canceled -= m_Wrapper.m_PiecesActionsActionsCallbackInterface.OnVerticalMove;
            }
            m_Wrapper.m_PiecesActionsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Rotate.started += instance.OnRotate;
                @Rotate.performed += instance.OnRotate;
                @Rotate.canceled += instance.OnRotate;
                @TouchDown.started += instance.OnTouchDown;
                @TouchDown.performed += instance.OnTouchDown;
                @TouchDown.canceled += instance.OnTouchDown;
                @TouchUp.started += instance.OnTouchUp;
                @TouchUp.performed += instance.OnTouchUp;
                @TouchUp.canceled += instance.OnTouchUp;
                @HorizontalMove.started += instance.OnHorizontalMove;
                @HorizontalMove.performed += instance.OnHorizontalMove;
                @HorizontalMove.canceled += instance.OnHorizontalMove;
                @VerticalMove.started += instance.OnVerticalMove;
                @VerticalMove.performed += instance.OnVerticalMove;
                @VerticalMove.canceled += instance.OnVerticalMove;
            }
        }
    }
    public PiecesActionsActions @PiecesActions => new PiecesActionsActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    private int m_TouchSchemeIndex = -1;
    public InputControlScheme TouchScheme
    {
        get
        {
            if (m_TouchSchemeIndex == -1) m_TouchSchemeIndex = asset.FindControlSchemeIndex("Touch");
            return asset.controlSchemes[m_TouchSchemeIndex];
        }
    }
    public interface IPiecesActionsActions
    {
        void OnRotate(InputAction.CallbackContext context);
        void OnTouchDown(InputAction.CallbackContext context);
        void OnTouchUp(InputAction.CallbackContext context);
        void OnHorizontalMove(InputAction.CallbackContext context);
        void OnVerticalMove(InputAction.CallbackContext context);
    }
}
